apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: my-connect-cluster
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  replicas: 1
  #version: x.y.z
  bootstrapServers: my-cluster-kafka-bootstrap:9093
  tls:
    trustedCertificates:
      - secretName: my-cluster-cluster-ca-cert
        certificate: ca.crt
  config:
    group.id: my-connect-cluster
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    key.converter: org.apache.kafka.connect.storage.StringConverter
    value.converter: org.apache.kafka.connect.storage.StringConverter
    # -1 means use default broker RF
    config.storage.replication.factor: -1
    offset.storage.replication.factor: -1
    status.storage.replication.factor: -1
  logging:
    type: inline
    loggers:
      rootLogger.level: INFO
      logger.sourcetask.name: org.apache.kafka.connect.runtime.WorkerSourceTask
      logger.sourcetask.level: INFO
      logger.sinktask.name: org.apache.kafka.connect.runtime.WorkerSinkTask
      logger.sinktask.level: INFO
  resources:
    requests:
      cpu: 2000m
      memory: 2Gi
  build:
    output:
      type: docker
      image: ttl.sh/fvaleri/kafka-connect:24h
    plugins:
      - name: debezium-mysql
        artifacts:
          - type: tgz
            url: https://repo1.maven.org/maven2/io/debezium/debezium-connector-mysql/2.3.7.Final/debezium-connector-mysql-2.3.7.Final-plugin.tar.gz
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: mysql-source-connector
  labels:
    # must match the connect name
    strimzi.io/cluster: my-connect-cluster
spec:
  tasksMax: 1
  class: io.debezium.connector.mysql.MySqlConnector
  config:
    database.hostname: "my-mysql-svc"
    database.port: 3306
    database.user: "debezium"
    database.password: "changeit"
    database.dbname: "testdb"
    # never change topic.prefix after connector startup
    topic.prefix: "my-mysql"
    # the server.id must be unique for each server or replication client
    database.server.id: "222222"
    database.include.list: "testdb"
    table.include.list: "testdb.customers"
    schema.history.internal.kafka.bootstrap.servers: "my-cluster-kafka-bootstrap:9092"
    schema.history.internal.kafka.topic: "testdb.history"
    include.schema.changes: "true"
    # commit progress even when there are no changes
    heartbeat.interval.ms: 10000
    snapshot.mode: "when_needed"
